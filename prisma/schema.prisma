generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.svg"
  theme    = "neutral"
  erdDebug = true
}

model User {
  id                  String         @id @default(uuid())
  name                String
  email               String         @unique
  google_id           String         @unique
  avatar_url          String
  subscribe           Boolean
  saved_professionals Professional[]
  owned_professional  Professional?  @relation(name: "RegisteredAsProfessional")

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Professional {
  id                       String    @id @default(uuid())
  user_owner_id            String
  profile_picture_url      String
  profile_picture_gcs_path String
  name                     String
  email                    String?
  phone                    String?
  state_uf                 String
  city                     String
  services                 Service[]
  biography                String
  whatsapp                 String?
  instagram                String?
  saved_users              User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User @relation(fields: [user_owner_id], references: [id], name: "RegisteredAsProfessional")

  @@unique([user_owner_id])
  @@map("professionals")
}

model Service {
  id                       String         @id @default(uuid())
  service_name             String
  registered_professionals Professional[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([service_name])
  @@map("services")
}

model AdMeta {
  id          String    @id @default(uuid())
  name        String
  logo_url    String
  website_url String
  articles    Article[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ad_metadatas")
}

model Article {
  id         String  @id @default(uuid())
  slug       String
  title      String
  banner_url String?
  content    String
  adMetaId   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  AdMeta AdMeta? @relation(fields: [adMetaId], references: [id])

  @@index([adMetaId])
  @@map("articles")
}
